!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e){t.exports=class{constructor(t,e){this.game=t,this.el=e,this.setupTowers(),this.render(),this.firstClick=!0,this.firstPile=null,this.installHandlers()}setupTowers(){const t=$(this.el);for(let e=0;e<3;e++){let s=$(`<ul data-tower-id=${e}></ul>`);for(let t=0;t<3;t++){let r=$(`<li data-id=[${[e,t]}]></li>`);s.append(r)}t.append(s)}}render(){let t=this.game.towers;$("li").removeClass("_1 _2 _3"),t.forEach(function(t,e,s){$(`*[data-tower-id='${e}']`),0!=s[e].length&&t.forEach(function(t,s,r){$(`*[data-id='[${e},${s}]']`).addClass(`_${t}`)})}),this.game.isWon()&&($("ul").off("click"),this.el.addClass("winner"),$("li").removeClass("_1 _2 _3"))}installHandlers(){const t=$("ul");t.on("click",e=>{if(this.firstClick){let t=$(e.currentTarget);this.firstPile=t.data("tower-id"),this.firstClick=!1,t.addClass("selected")}else{let s=$(e.currentTarget).data("tower-id");this.game.move(this.firstPile,s)||alert("Invalid Move!"),t.removeClass("selected"),this.firstClick=!0}this.render()})}}},function(t,e){t.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(t,e){const s=this.towers[t],r=this.towers[e];return 0!==s.length&&(0==r.length||s[s.length-1]<r[r.length-1])}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(t,e){return!!this.isValidMove(t,e)&&(this.towers[e].push(this.towers[t].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(t,e){this.print(),t.question("Enter a starting tower: ",s=>{const r=parseInt(s);t.question("Enter an ending tower: ",t=>{const s=parseInt(t);e(r,s)})})}run(t,e){this.promptMove(t,(s,r)=>{this.move(s,r)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),e()):this.run(t,e)})}}},function(t,e,s){const r=s(1),i=s(0);console.log("working"),$(()=>{const t=$(".hanoi"),e=new r;new i(e,t)})}]);